apply plugin: 'java'
apply plugin: 'com.google.protobuf'

group 'org.ruqinhu'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation group: 'com.alipay.sofa', name: 'jraft-core', version: '1.3.7'
    implementation group: 'com.alipay.sofa', name: 'rpc-grpc-impl', version: '1.3.7'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.3.7'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.2'

    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'io.dropwizard.metrics:metrics-core:4.2.3'
    implementation 'io.dropwizard.metrics:metrics-json:4.2.3'

    implementation 'com.google.protobuf:protobuf-java:3.17.3'
}

sourceSets {
    main {
        java {
            // In addition to the default 'src/main/proto'
            srcDirs 'main/java'
        }
        proto {
            srcDir 'src/main/resources'
            include '**/*.proto'
        }
    }
}

protobuf {

    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    generatedFilesBaseDir = "$projectDir/src"  //  不配置默认生成到  build/generated/source/proto/main 文件夹下面


    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you don't locate it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
            // or
            // path = 'tools/protoc-gen-grpc-java'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {
//                outputSubDir = 'grpc'
            }
        }
    }

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
test {
    useJUnitPlatform()
}